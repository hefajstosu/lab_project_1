import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.function.Function;
import java.util.stream.Collectors;

public class Main {
    public static void main(String[] args) throws IOException {
        String content = Files.readString(Paths.get("src/text_to_clean.txt"));

        String trimmed = Arrays.stream(content.split("\n"))
                .dropWhile(line -> !line.contains("*** START OF THIS PROJECT GUTENBERG EBOOK"))
                .skip(1)
                .takeWhile(line -> !line.contains("*** END OF THIS PROJECT GUTENBERG EBOOK"))
                .collect(Collectors.joining(" "));



        Function<String, String> cleanText = text -> text
                .replaceAll("[.,\"'!?;:()\\[\\]\\-–—]", "")
                .toLowerCase()
                .replaceAll("\\s+", " ")
                .trim();


        String cleaned = cleanText.apply(trimmed);

        List<String> words = Arrays.stream(cleaned.split("[.!?]"))
                .flatMap(sentence -> Arrays.stream(sentence.split(" ")))
                .filter(word -> !stopWords.contains(word))
                .filter(word -> !word.isBlank())
                .collect(Collectors.toList());


        Map<String, Long> freq = words.stream()
                .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));

        freq.entrySet().stream()
                .sorted(Map.Entry.<String, Long>comparingByValue().reversed())
                .limit(10)
                .forEach(entry -> System.out.println(entry.getKey() + ": " + entry.getValue()));



    }

    static final Set<String> stopWords = Set.of(
            "the", "and", "he", "she", "it", "a", "an", "to", "of", "in", "on", "for", "with", "that", "this", "as",
            "is", "was", "were", "are", "be", "by", "at", "from", "but", "not", "or", "we", "they", "you", "i", "his", "her"
            //examplary stop words generated by chat GPT
    );





}